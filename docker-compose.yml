version: "3"

services:
  emqx:
    image: emqx/emqx
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    ports:
      - 18083:18083
      - 1883:1883
      - 8083:8083
    networks:
      - backend

  foxlink-backend:
    # image: ghcr.io/jjyao88/foxlink-api-backend/backend:latest
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      PY_ENV: production
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: AqqhQ993VNto
      DATABASE_NAME: foxlink
      FOXLINK_DB_HOSTS: "['140.118.157.9:3308', '140.118.157.9:3307']"
      FOXLINK_DB_USER: ntust
      FOXLINK_DB_PWD: ntustpwd
      JWT_SECRET: secret
      MQTT_BROKER: emqx
      MQTT_PORT: 1883
    ports:
      - 8080:80
    depends_on:
      - emqx
      - mysql
    networks:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"

  foxlink-daemon:
    restart: unless-stopped
    build:
      context: .
      dockerfile: daemon.Dockerfile
    environment:
      PY_ENV: production
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: AqqhQ993VNto
      DATABASE_NAME: foxlink
      FOXLINK_DB_HOSTS: "['140.118.157.9:3308', '140.118.157.9:3307']"
      FOXLINK_DB_USER: ntust
      FOXLINK_DB_PWD: ntustpwd
      JWT_SECRET: secret
      MQTT_BROKER: emqx
      MQTT_PORT: 1883
    depends_on:
      - foxlink-backend
    networks:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mysql:
    image: mysql:8
    restart: unless-stopped
    labels:
      com.centurylinklabs.watchtower.enable: "false"
    environment:
      MYSQL_DATABASE: foxlink
      MYSQL_ROOT_PASSWORD: AqqhQ993VNto
    ports:
      - 27001:3306
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend
    
  watchtower:
    image: containrrr/watchtower
    command: --interval 30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./watchtower-config.json:/config.json

networks:
  backend:
    driver: bridge

volumes:
  mysql-data:
